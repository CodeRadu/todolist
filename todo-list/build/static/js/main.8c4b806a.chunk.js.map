{"version":3,"sources":["TodoList.js","App.js","index.js"],"names":["TodoList","todoList","toggleTodo","type","checked","completed","onChange","id","name","LOCAL_STORAGE_KEY","App","useState","todos","setTodos","todoNameRef","useRef","newTodos","todo","find","useEffect","storedTodos","JSON","parse","localStorage","getItem","setItem","stringify","map","ref","onClick","e","current","value","prevTodos","v4","filter","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6KAEe,SAASA,EAAT,GAA2C,IAAxBC,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,WAIxC,OACI,8BACI,kCACI,uBAAOC,KAAK,WAAWC,QAASH,EAASI,UAAWC,SANhE,WACIJ,EAAWD,EAASM,OAMXN,EAASO,U,YCNpBC,EAAkB,gBAiDTC,MA/Cf,WAAgB,IAAD,EACWC,mBAAS,IADpB,mBACNC,EADM,KACCC,EADD,KAEPC,EAAYC,mBAOlB,SAASb,EAAWK,GAClB,IAAMS,EAAS,YAAIJ,GACbK,EAAKD,EAASE,MAAK,SAAAD,GAAI,OAAEA,EAAKV,KAAKA,KACzCU,EAAKZ,WAAWY,EAAKZ,UACrBQ,EAASG,GAqBX,OA9BAG,qBAAU,WACR,IAAMC,EAAYC,KAAKC,MAAMC,aAAaC,QAAQf,IAC/CW,GAAYP,EAASO,KACvB,IASHD,qBAAU,WACRI,aAAaE,QAAQhB,EAAmBY,KAAKK,UAAUd,MACtD,CAACA,IAiBF,qCACGA,EAAMe,KAAI,SAAAV,GACT,OAAO,cAACjB,EAAD,CAAwBC,SAAUgB,EAAMf,WAAYA,GAArCe,EAAKV,OAE7B,uBAAOJ,KAAK,OAAOyB,IAAKd,IACxB,wBAAQe,QApBZ,SAAuBC,GACrB,IAAMtB,EAAKM,EAAYiB,QAAQC,MACrB,KAAPxB,IACHK,GAAS,SAAAoB,GACP,MAAM,GAAN,mBAAWA,GAAX,CAAsB,CAAC1B,GAAI2B,cAAM1B,KAAMA,EAAMH,WAAW,QAE1DS,EAAYiB,QAAQC,MAAM,OAcxB,uBACA,wBAAQH,QAZZ,WACE,IAAMb,EAASJ,EAAMuB,QAAO,SAAAlB,GAAI,OAAGA,EAAKZ,aACxCQ,EAASG,IAUP,6BACA,gCAAMJ,EAAMuB,QAAO,SAAAlB,GAAI,OAAGA,EAAKZ,aAAW+B,OAA1C,qBC5CNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.8c4b806a.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function TodoList({todoList, toggleTodo}) {\r\n    function handleTodoClick(){\r\n        toggleTodo(todoList.id)\r\n    }\r\n    return (\r\n        <div>\r\n            <label>\r\n                <input type=\"checkbox\" checked={todoList.completed} onChange={handleTodoClick}/>\r\n                {todoList.name}\r\n            </label>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState, useRef, useEffect} from 'react'\nimport TodoList from './TodoList'\nimport {v4} from 'uuid'\n\nconst LOCAL_STORAGE_KEY='todoApp.todos'\n\nfunction App() {\n  const [todos, setTodos]=useState([])\n  const todoNameRef=useRef()\n\n  useEffect(()=>{\n    const storedTodos=JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY))\n    if(storedTodos)setTodos(storedTodos)\n  }, [])\n\n  function toggleTodo(id){\n    const newTodos=[...todos]\n    const todo=newTodos.find(todo=>todo.id===id)\n    todo.completed=!todo.completed\n    setTodos(newTodos)\n  }\n\n  useEffect(()=>{\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(todos))\n  }, [todos])\n\n  function handleAddTodo(e){\n    const name=todoNameRef.current.value\n    if(name==='')return\n    setTodos(prevTodos=>{\n      return [...prevTodos, {id: v4(), name: name, completed: false}]\n    })\n    todoNameRef.current.value=null\n  }\n\n  function handleClearTodos(){\n    const newTodos=todos.filter(todo=>!todo.completed)\n    setTodos(newTodos)\n  }\n\n  return (\n    <>\n      {todos.map(todo=>{\n        return <TodoList key={todo.id} todoList={todo} toggleTodo={toggleTodo}/>\n      })}\n      <input type=\"text\" ref={todoNameRef}></input>\n      <button onClick={handleAddTodo}>Add to do</button>\n      <button onClick={handleClearTodos}>Clear completed</button>\n      <div>{todos.filter(todo=>!todo.completed).length} left to do</div>\n    </>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}
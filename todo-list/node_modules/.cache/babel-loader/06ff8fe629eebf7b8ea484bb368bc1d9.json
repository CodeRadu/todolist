{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\radum\\\\Desktop\\\\web-apps\\\\todo-list\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport TodoList from './TodoList';\nimport { v4 } from 'uuid';\nconst LOCAL_STORAGE_KEY = 'todoApp.todos';\n\nfunction App() {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n  const todoNameRef = useRef();\n  useEffect(() => {\n    const storedTodos = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\n    if (storedTodos) setTodos(storedTodos);\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(todos));\n  }, [todos]);\n\n  function handleAddTodo(e) {\n    const name = todoNameRef.current.value;\n    if (name === '') return;\n    console.log(name);\n    setTodos(prevTodos => {\n      return [...prevTodos, {\n        id: v4(),\n        name: name,\n        completed: false\n      }];\n    });\n    todoNameRef.current.value = null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [todos.map(todo => {\n      return /*#__PURE__*/_jsxDEV(TodoList, {\n        todoList: todo\n      }, todo.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 16\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      ref: todoNameRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddTodo,\n      children: \"Add to do\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Clear completed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"qH2GEr92xkIFQxR2Djx4V7Ti/yU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/radum/Desktop/web-apps/todo-list/src/App.js"],"names":["React","useState","useRef","useEffect","TodoList","v4","LOCAL_STORAGE_KEY","App","todos","setTodos","todoNameRef","storedTodos","JSON","parse","localStorage","getItem","setItem","stringify","handleAddTodo","e","name","current","value","console","log","prevTodos","id","completed","map","todo"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,MAAzB,EAAiCC,SAAjC,QAAiD,OAAjD;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAAQC,EAAR,QAAiB,MAAjB;AAEA,MAAMC,iBAAiB,GAAC,eAAxB;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAMS,WAAW,GAACR,MAAM,EAAxB;AAEAC,EAAAA,SAAS,CAAC,MAAI;AACZ,UAAMQ,WAAW,GAACC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqBT,iBAArB,CAAX,CAAlB;AACA,QAAGK,WAAH,EAAeF,QAAQ,CAACE,WAAD,CAAR;AAChB,GAHQ,EAGN,EAHM,CAAT;AAKAR,EAAAA,SAAS,CAAC,MAAI;AACZW,IAAAA,YAAY,CAACE,OAAb,CAAqBV,iBAArB,EAAwCM,IAAI,CAACK,SAAL,CAAeT,KAAf,CAAxC;AACD,GAFQ,EAEN,CAACA,KAAD,CAFM,CAAT;;AAIA,WAASU,aAAT,CAAuBC,CAAvB,EAAyB;AACvB,UAAMC,IAAI,GAACV,WAAW,CAACW,OAAZ,CAAoBC,KAA/B;AACA,QAAGF,IAAI,KAAG,EAAV,EAAa;AACbG,IAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACAX,IAAAA,QAAQ,CAACgB,SAAS,IAAE;AAClB,aAAO,CAAC,GAAGA,SAAJ,EAAe;AAACC,QAAAA,EAAE,EAAErB,EAAE,EAAP;AAAWe,QAAAA,IAAI,EAAEA,IAAjB;AAAuBO,QAAAA,SAAS,EAAE;AAAlC,OAAf,CAAP;AACD,KAFO,CAAR;AAGAjB,IAAAA,WAAW,CAACW,OAAZ,CAAoBC,KAApB,GAA0B,IAA1B;AACD;;AAED,sBACE;AAAA,eACGd,KAAK,CAACoB,GAAN,CAAUC,IAAI,IAAE;AACf,0BAAO,QAAC,QAAD;AAAwB,QAAA,QAAQ,EAAEA;AAAlC,SAAeA,IAAI,CAACH,EAApB;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFA,CADH,eAIE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,GAAG,EAAEhB;AAAxB;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAQ,MAAA,OAAO,EAAEQ,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANF;AAAA,kBADF;AAUD;;GAjCQX,G;;KAAAA,G;AAmCT,eAAeA,GAAf","sourcesContent":["import React, {useState, useRef, useEffect} from 'react'\nimport TodoList from './TodoList'\nimport {v4} from 'uuid'\n\nconst LOCAL_STORAGE_KEY='todoApp.todos'\n\nfunction App() {\n  const [todos, setTodos]=useState([])\n  const todoNameRef=useRef()\n\n  useEffect(()=>{\n    const storedTodos=JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY))\n    if(storedTodos)setTodos(storedTodos)\n  }, [])\n\n  useEffect(()=>{\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(todos))\n  }, [todos])\n\n  function handleAddTodo(e){\n    const name=todoNameRef.current.value\n    if(name==='')return\n    console.log(name)\n    setTodos(prevTodos=>{\n      return [...prevTodos, {id: v4(), name: name, completed: false}]\n    })\n    todoNameRef.current.value=null\n  }\n\n  return (\n    <>\n      {todos.map(todo=>{\n        return <TodoList key={todo.id} todoList={todo}/>\n      })}\n      <input type=\"text\" ref={todoNameRef}></input>\n      <button onClick={handleAddTodo}>Add to do</button>\n      <button>Clear completed</button>\n    </>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}